{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/services/login.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","loadChildren","m","UserModule","AdminModule","AppRoutingModule","forRoot","imports","AppComponent","log","router","getStatus","navigate","usertype","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","LoginComponent","route","username","password","status","rusername","rpassword","vpassword","remail","rstatus","logform","subscribe","data","error","length","login","user","sessionStorage","setItem","rerror","emailregex","test","check","result","obj","email","role","register","alert","LogService","http","authstring","getItem","httpOptions","headers","post","str","get","btoa","removeItem","providedIn","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path:\"login\",component:LoginComponent},\n  {path:\"user\",\n  loadChildren:() => import('./user/user.module').then(m => m.UserModule)},\n  {path:\"admin\",loadChildren: \n  () => import('./admin/admin.module').then(m => m.AdminModule)}\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport {  Router } from '@angular/router';\nimport { LogService } from './services/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  \n       constructor(private log:LogService,private router:Router){\n             \n       }\n//it will execute after constructor, first ui rendering, only once\n      ngAfterViewInit(){\n      \n           \n              if(!this.log.getStatus()){\n                \n                 this.router.navigate(['login'])\n              }\n              else{\n                if(this.log.usertype==\"admin\")\n                  this.router.navigate(['admin/home']);\n                else\n                  this.router.navigate(['user/home']);\n              }\n      }\n       \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport PubSub from 'pubsub-js';\nimport { LogService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\ninterface User {\n  username:string;\n  usertype:string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n// Login variables\n username:string=\"\";\n password:string=\"\";\n error:string;\n status:boolean=false;\n\n // Register Variables\n\n rusername:string=\"\";\n rpassword:string=\"\";\n vpassword:string=\"\";\n remail:string=\"\";\n rerror:string;\n rstatus:boolean=false\n\n// Common variables\n\n  logform:boolean=true;\n\n  constructor(private log:LogService,private route:Router) { }\n\n  ngOnInit(): void {\n    PubSub.subscribe('log-error',(e,data)=>\n       this.error=\"Invalid login credentials\"\n    )\n  }\n  \n  toggle(){\n     this.logform=this.logform?false:true;\n  }\n\n  login():void{\n    this.error=\"\";\n    if(this.username.length==0 || this.password.length==0)\n    this.error=\"Fill all the fields\";\n    else{\n      this.status=true;\n      this.log.login(this.username,this.password).subscribe(\n           (user:User)=>{\n             sessionStorage.setItem(\"username\",user.username);\n             sessionStorage.setItem(\"usertype\",user.usertype);\n             this.log.username=user.username;\n             this.log.usertype=user.usertype;\n             this.status=false;\n             if(user.usertype==\"admin\")\n                 this.route.navigate(['admin/home']);\n             else\n                 this.route.navigate(['user/home']);\n           },\n           ()=>{\n             this.error=\"Invalid Credentials\";\n             this.status=false;\n           }\n      )\n          }\n  }\n\n  //new User Registration \n\n  register():void{\n     \n      this.rerror=\"\";\n      let emailregex:RegExp=/^[a-z][a-z0-9_\\.]+@[a-z]{2,5}\\.[a-z]{3,5}$/\n\n      if(this.rusername.length==0 || this.rpassword.length==0 || this.vpassword.length==0 || this.remail.length==0)\n      this.rerror=\"Fill all the fields\";\n\n      else if(this.rusername.length<4)\n      this.rerror=\"Username should be atleast 4 charectars long\"\n\n      else if(this.rpassword.length<6)\n      this.rerror=\"password should be atleast 6 charectars long\"\n\n      else if(this.rpassword!=this.vpassword)\n      this.rerror=\"Username and password should match\"\n\n      else if(!emailregex.test(this.remail))\n      this.rerror=\"not in email format\"\n\n      else{\n          this.rstatus=true;\n          this.log.check(this.rusername+\"_\"+this.remail).subscribe(\n            (result:any)=>{\n               this .rstatus=false;\n               if(result.status==\"user exists\")\n                 this.rerror=\"user already exists\"\n               else if(result.status==\"email exists\")\n                 this.rerror=\"email already exists\"\n               else{\n                   this.rstatus=true;\n                   let obj={username:this.rusername,password:this.rpassword,email:this.remail,role:\"user\"}\n                   this.log.register(obj).subscribe(\n                      ()=>{\n                          alert(\"User successfully registered\");\n                          this.logform=true;\n                          this.rstatus=false;\n                      },\n                      ()=>{\n                          alert(\"There is problem , Please try again or later\")\n                          this.rstatus=false;\n                      }\n                   )\n               }\n            }\n          )\n      }\n  }\n\n}\n","<div id=\"home\">\n    <div id=\"log-page-image\">\n        <img src=\"http://localhost:5000/files/images/logpage.jpg\">\n    </div>\n\n    <div id=\"log-page-form\"  *ngIf=\"logform\">\n         <h2>Fitness Tracker</h2>\n\n          <div class=\"form-item\">\n                 <label class=\"label\">Username</label>\n                 <input type=\"text\" name=\"username\"  [(ngModel)]=\"username\">\n          </div>\n          <div class=\"form-item\">\n            <label class=\"label\">Password</label>\n            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\n         </div>\n\n         <div class=\"submit-item\">\n             <button type=\"button\" (click)=\"login()\">Login</button>\n         </div>\n         <div class=\"loading\" *ngIf=\"status\"><img src=\"http://localhost:5000/files/images/loading.gif\"></div>\n         <div class=\"errors\">{{error}}</div>\n         <h5 (click)=\"toggle()\">Not Registered Yet? Click Here</h5>\n    </div>\n\n\n    <div id=\"log-reg-form\"  *ngIf=\"!logform\">\n        <h2>Fitness Tracker  - Register User</h2>\n\n         <div class=\"form-item\">\n                <label class=\"label\">Username</label>\n                <input type=\"text\"   [(ngModel)]=\"rusername\">\n         </div>\n         <div class=\"form-item\">\n           <label class=\"label\">Password</label>\n           <input type=\"password\"  [(ngModel)]=\"rpassword\">\n        </div>\n\n        <div class=\"form-item\">\n            <label class=\"label\">Verify Password</label>\n            <input type=\"password\"  [(ngModel)]=\"vpassword\">\n         </div>\n         <div class=\"form-item\">\n            <label class=\"label\">Email</label>\n            <input type=\"text\" [(ngModel)]=\"remail\">\n         </div>\n\n        <div class=\"submit-item\">\n            <button type=\"button\" (click)=\"register()\">Register</button>\n        </div>\n        <div class=\"loading\" *ngIf=\"rstatus\"><img src=\"http://localhost:5000/files/images/loading.gif\"></div>\n        <div class=\"errors\">{{rerror}}</div>\n        <h5 (click)=\"toggle()\">Have an Account? Login</h5>\n   </div>\n\n    \n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n httpOptions;\n username:String='';\n usertype:String='';\n authstring:string='';\n status:boolean=false;\n  constructor(private http:HttpClient) {\n      let username=sessionStorage.getItem(\"username\");\n      let usertype=sessionStorage.getItem(\"usertype\");\n      let authstring=sessionStorage.getItem(\"authstring\");\n      if(username&&usertype){\n        this.status=true;\n        this.username=username;\n        this.usertype=usertype;\n        this.authstring=authstring;\n      }\n   }\n\n  getStatus():boolean{\n    return this.status;\n  }\n\n  // To Register a User\n  register(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n        })\n    }\n    return this.http.post(\"http://localhost:5000/users\",obj,this.httpOptions);\n  }\n\n  //To check avalailability of mail id and username\n\n  check(str):Observable<object>{\n    return this.http.get(\"http://localhost:5000/userlog/\"+str,this.httpOptions);\n  }\n\n// to Login\n  login(username,password):Observable<object>{\n    this.authstring='Basic '+btoa(username+\":\"+password);\n    sessionStorage.setItem(\"authstring\",this.authstring);\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'Basic '+btoa(username+\":\"+password)\n      })\n    }\n    return this.http.post(\"http://localhost:5000/userlog/\"+username,{},this.httpOptions);\n  }\n\n  logout():void{\n     this.authstring=\"\";\n     this.username=\"\";\n     this.usertype=\"\";\n     sessionStorage.removeItem(\"authstring\");\n     sessionStorage.removeItem(\"username\");\n     sessionStorage.removeItem(\"usertype\");\n     \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}