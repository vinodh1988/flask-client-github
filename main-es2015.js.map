{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/login.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\n\nconst routes: Routes = [\n  {path:\"login\",component:LoginComponent},\n  {path:\"user\",\n  loadChildren:() => import('./user/user.module').then(m => m.UserModule)},\n  {path:\"admin\",loadChildren: \n  () => import('./admin/admin.module').then(m => m.AdminModule)}\n];\n\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, AfterViewInit } from '@angular/core';\n\nimport {  Router } from '@angular/router';\nimport { LogService } from './services/login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit{\n  \n       constructor(private log:LogService,private router:Router){\n             \n       }\n//it will execute after constructor, first ui rendering, only once\n      ngAfterViewInit(){\n      \n           \n              if(!this.log.getStatus()){\n                \n                 this.router.navigate(['login'])\n              }\n              else{\n                if(this.log.usertype==\"admin\")\n                  this.router.navigate(['admin/home']);\n                else\n                  this.router.navigate(['user/home']);\n              }\n      }\n       \n\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http'\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport PubSub from 'pubsub-js';\nimport { LogService } from '../services/login.service';\nimport { Router } from '@angular/router';\n\ninterface User {\n  username:string;\n  usertype:string;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n// Login variables\n username:string=\"\";\n password:string=\"\";\n error:string;\n status:boolean=false;\n\n // Register Variables\n\n rusername:string=\"\";\n rpassword:string=\"\";\n vpassword:string=\"\";\n remail:string=\"\";\n rerror:string;\n rstatus:boolean=false\n\n// Common variables\n\n  logform:boolean=true;\n\n  constructor(private log:LogService,private route:Router) { }\n\n  ngOnInit(): void {\n    PubSub.subscribe('log-error',(e,data)=>\n       this.error=\"Invalid login credentials\"\n    )\n  }\n  \n  toggle(){\n     this.logform=this.logform?false:true;\n  }\n\n  login():void{\n    this.error=\"\";\n    if(this.username.length==0 || this.password.length==0)\n    this.error=\"Fill all the fields\";\n    else{\n      this.status=true;\n      this.log.login(this.username,this.password).subscribe(\n           (user:User)=>{\n             sessionStorage.setItem(\"username\",user.username);\n             sessionStorage.setItem(\"usertype\",user.usertype);\n             this.log.username=user.username;\n             this.log.usertype=user.usertype;\n             this.status=false;\n             if(user.usertype==\"admin\")\n                 this.route.navigate(['admin/home']);\n             else\n                 this.route.navigate(['user/home']);\n           },\n           ()=>{\n             this.error=\"Invalid Credentials\";\n             this.status=false;\n           }\n      )\n          }\n  }\n\n  //new User Registration \n\n  register():void{\n     \n      this.rerror=\"\";\n      let emailregex:RegExp=/^[a-z][a-z0-9_\\.]+@[a-z]{2,5}\\.[a-z]{3,5}$/\n\n      if(this.rusername.length==0 || this.rpassword.length==0 || this.vpassword.length==0 || this.remail.length==0)\n      this.rerror=\"Fill all the fields\";\n\n      else if(this.rusername.length<4)\n      this.rerror=\"Username should be atleast 4 charectars long\"\n\n      else if(this.rpassword.length<6)\n      this.rerror=\"password should be atleast 6 charectars long\"\n\n      else if(this.rpassword!=this.vpassword)\n      this.rerror=\"Username and password should match\"\n\n      else if(!emailregex.test(this.remail))\n      this.rerror=\"not in email format\"\n\n      else{\n          this.rstatus=true;\n          this.log.check(this.rusername+\"_\"+this.remail).subscribe(\n            (result:any)=>{\n               this .rstatus=false;\n               if(result.status==\"user exists\")\n                 this.rerror=\"user already exists\"\n               else if(result.status==\"email exists\")\n                 this.rerror=\"email already exists\"\n               else{\n                   this.rstatus=true;\n                   let obj={username:this.rusername,password:this.rpassword,email:this.remail,role:\"user\"}\n                   this.log.register(obj).subscribe(\n                      ()=>{\n                          alert(\"User successfully registered\");\n                          this.logform=true;\n                          this.rstatus=false;\n                      },\n                      ()=>{\n                          alert(\"There is problem , Please try again or later\")\n                          this.rstatus=false;\n                      }\n                   )\n               }\n            }\n          )\n      }\n  }\n\n}\n","<div id=\"home\">\n    <div id=\"log-page-image\">\n        <img src=\"http://localhost:5000/files/images/logpage.jpg\">\n    </div>\n\n    <div id=\"log-page-form\"  *ngIf=\"logform\">\n         <h2>Fitness Tracker</h2>\n\n          <div class=\"form-item\">\n                 <label class=\"label\">Username</label>\n                 <input type=\"text\" name=\"username\"  [(ngModel)]=\"username\">\n          </div>\n          <div class=\"form-item\">\n            <label class=\"label\">Password</label>\n            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\">\n         </div>\n\n         <div class=\"submit-item\">\n             <button type=\"button\" (click)=\"login()\">Login</button>\n         </div>\n         <div class=\"loading\" *ngIf=\"status\"><img src=\"http://localhost:5000/files/images/loading.gif\"></div>\n         <div class=\"errors\">{{error}}</div>\n         <h5 (click)=\"toggle()\">Not Registered Yet? Click Here</h5>\n    </div>\n\n\n    <div id=\"log-reg-form\"  *ngIf=\"!logform\">\n        <h2>Fitness Tracker  - Register User</h2>\n\n         <div class=\"form-item\">\n                <label class=\"label\">Username</label>\n                <input type=\"text\"   [(ngModel)]=\"rusername\">\n         </div>\n         <div class=\"form-item\">\n           <label class=\"label\">Password</label>\n           <input type=\"password\"  [(ngModel)]=\"rpassword\">\n        </div>\n\n        <div class=\"form-item\">\n            <label class=\"label\">Verify Password</label>\n            <input type=\"password\"  [(ngModel)]=\"vpassword\">\n         </div>\n         <div class=\"form-item\">\n            <label class=\"label\">Email</label>\n            <input type=\"text\" [(ngModel)]=\"remail\">\n         </div>\n\n        <div class=\"submit-item\">\n            <button type=\"button\" (click)=\"register()\">Register</button>\n        </div>\n        <div class=\"loading\" *ngIf=\"rstatus\"><img src=\"http://localhost:5000/files/images/loading.gif\"></div>\n        <div class=\"errors\">{{rerror}}</div>\n        <h5 (click)=\"toggle()\">Have an Account? Login</h5>\n   </div>\n\n    \n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n httpOptions;\n username:String='';\n usertype:String='';\n authstring:string='';\n status:boolean=false;\n  constructor(private http:HttpClient) {\n      let username=sessionStorage.getItem(\"username\");\n      let usertype=sessionStorage.getItem(\"usertype\");\n      let authstring=sessionStorage.getItem(\"authstring\");\n      if(username&&usertype){\n        this.status=true;\n        this.username=username;\n        this.usertype=usertype;\n        this.authstring=authstring;\n      }\n   }\n\n  getStatus():boolean{\n    return this.status;\n  }\n\n  // To Register a User\n  register(obj):Observable<object>{\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json'\n        })\n    }\n    return this.http.post(\"http://localhost:5000/users\",obj,this.httpOptions);\n  }\n\n  //To check avalailability of mail id and username\n\n  check(str):Observable<object>{\n    return this.http.get(\"http://localhost:5000/userlog/\"+str,this.httpOptions);\n  }\n\n// to Login\n  login(username,password):Observable<object>{\n    this.authstring='Basic '+btoa(username+\":\"+password);\n    sessionStorage.setItem(\"authstring\",this.authstring);\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'Basic '+btoa(username+\":\"+password)\n      })\n    }\n    return this.http.post(\"http://localhost:5000/userlog/\"+username,{},this.httpOptions);\n  }\n\n  logout():void{\n     this.authstring=\"\";\n     this.username=\"\";\n     this.usertype=\"\";\n     sessionStorage.removeItem(\"authstring\");\n     sessionStorage.removeItem(\"username\");\n     sessionStorage.removeItem(\"usertype\");\n     \n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}