{"version":3,"sources":["webpack:///src/app/admin/adminworkouts/adminworkouts.module.ts","webpack:///src/app/admin/adminworkouts/workout-form/workout-form.component.ts","webpack:///src/app/admin/adminworkouts/workout-form/workout-form.component.html","webpack:///src/app/admin/adminworkouts/workouts-home/workouts-home.component.ts","webpack:///src/app/admin/adminworkouts/workouts-home/workouts-home.component.html"],"names":["route","path","component","AdminworkoutsModule","forChild","declarations","imports","WorkoutFormComponent","fb","ws","es","dialogRef","selected","myForm","group","name","required","minLength","description","weeks","days","imagefile","event","file","target","files","patchValue","get","updateValueAndValidity","exercises","x","id","push","length","alert","console","log","formData","FormData","append","value","addWorkout","subscribe","result","workoutid","obj","addWorkoutmap","close","getExercise","temp","uploadFile1","selector","templateUrl","styleUrls","WorkoutsHomeComponent","router","dialog","getWorkout","data","workouts","current","navigate","relativeTo","parent","state","open","width","height","afterClosed","ngOnInit","loadDialog"],"mappings":"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","file":"admin-adminworkouts-adminworkouts-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { WorkoutsHomeComponent } from './workouts-home/workouts-home.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WorkoutFormComponent } from './workout-form/workout-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngmaterialModule } from 'src/app/angmaterial/angmaterial.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { WorkoutItemDetailsComponent } from 'src/app/shared/workout-item-details/workout-item-details.component';\n\n\nconst route:Routes=[\n  {path:\"\",component: WorkoutsHomeComponent},\n  {path:\"details\",component:WorkoutItemDetailsComponent}\n]\n\n@NgModule({\n  declarations: [WorkoutsHomeComponent, WorkoutFormComponent],\n  imports: [\n    CommonModule,RouterModule.forChild(route),FormsModule,ReactiveFormsModule,AngmaterialModule,SharedModule\n  ]\n})\nexport class AdminworkoutsModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { WorkoutService } from 'src/app/services/workout.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ExercisesService } from 'src/app/services/exercises.service';\nimport { exercise } from 'src/app/model/exercise';\n\n@Component({\n  selector: 'app-workout-form',\n  templateUrl: './workout-form.component.html',\n  styleUrls: ['./workout-form.component.css']\n})\nexport class WorkoutFormComponent implements OnInit {\n  myForm;\n  exercises:exercise[];\n  selected:any[]=[];\n  constructor(public fb:FormBuilder,private ws:WorkoutService,private es:ExercisesService,  public dialogRef: MatDialogRef<WorkoutFormComponent>) {\n     this.myForm=  this.fb.group({\n         name:['',[Validators.required,Validators.minLength(4)]],\n         description:['',[Validators.required,Validators.minLength(20)]],\n         weeks:['',[Validators.required]],\n         days:['',[Validators.required]],\n         imagefile: [null,[Validators.required]]\n       });\n   }\n   \n   uploadFile1(event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    this.myForm.patchValue({\n      imagefile: file\n    });\n    this.myForm.get('imagefile').updateValueAndValidity()\n  }\n\n \n\n  addWorkout(){\n    let exercises=[];\n    for(let x in this.selected){\n            if(this.selected[x].id!=0){\n               exercises.push(this.selected[x].id);\n            }\n    }\n    if(exercises.length==0){\n      alert(\"Please select exercises\");\n      \n    }\n    else{\n    console.log(exercises);\n    var formData: any = new FormData();\n    formData.append(\"name\",this.myForm.get('name').value);\n    formData.append(\"description\",this.myForm.get('description').value);\n    formData.append(\"weeks\",this.myForm.get('weeks').value);\n    formData.append(\"days\",this.myForm.get('days').value);\n    formData.append(\"imagefile\",this.myForm.get('imagefile').value);\n    \n\n    this.ws.addWorkout(formData).subscribe(\n        (result:any)=>{\n          console.log(result);\n          let workoutid=result.id;\n          let obj={workoutid:workoutid,exercises:exercises}\n          this.ws.addWorkoutmap(obj).subscribe(\n            ()=>  this.dialogRef.close(),\n            ()=> alert(\"Something Went wrong\")\n          )\n        \n        },\n        ()=>{alert(\"Something Went Wrong\")}\n    );\n    }\n  }\n \n  selectedItem(x){\n    if(this.selected[x].class.length==0){\n        this.selected[x].id=this.exercises[x].id;\n        this.selected[x].class=\"tick\";\n    }\n\n    else{\n        this.selected[x].id=0;\n        this.selected[x].class=\"\";\n    }\n  }\n\n  ngOnInit(): void {\n       this.es.getExercise().subscribe(\n          (exercises:exercise[])=>{\n            this.exercises=exercises\n            console.log(this.exercises)\n            for(let x in this.exercises)\n                 {\n                   \n                   let temp={ class: '', id: 0}\n                   this.selected.push(temp);\n                 }\n                 console.log(this.selected)\n          },\n          ()=>{}\n       )\n  }\n\n}\n","<form [formGroup]=\"myForm\" (submit)=\"addWorkout()\">\n    <div class=\"container\">\n        <h1>Adding a new Workout</h1>\n    \n        <div class=\"left\">\n        <div class=\"form-item\">\n                <label class=\"label\">Name</label>\n                <input type=\"text\" formControlName=\"name\" >\n         </div>\n         <div class=\"form-item\">\n           <label class=\"label\">Description</label>\n           <textarea formControlName=\"description\"></textarea>\n         </div>\n        \n        \n       \n        </div>\n        <div class=\"right\">\n        <div class=\"form-item\">\n            <label class=\"label\"> Weeks</label>\n            <input type=\"number\" formControlName=\"weeks\" >\n        </div>\n    \n        <div class=\"form-item\">\n            <label class=\"label\"> Days</label>\n            <input type=\"number\" formControlName=\"days\" >\n        </div>\n     \n      \n    \n        <div class=\"form-item\">\n            <label class=\"label\">Image file</label>\n            <input type=\"file\" formControlName=\"imagefile\" (change)=\"uploadFile1($event)\">\n        </div>\n        \n     \n      </div>\n    </div>  \n        \n      \n    \n    \n    <div class=\"submit-item\" >\n        <h6 *ngIf=\"!myForm.valid\" [style.color]=\"'red'\" [style.textAlign]=\"'center'\">\n            Please  enter all the fields correctly {{myForm.valid}}</h6>\n        <input type=\"submit\" *ngIf=\"myForm.valid\" value=\"add Workout\">\n       \n    </div>\n\n    <div class=\"exercise-select\">\n                <h3 [style.textAlign]=\"'left'\" [style.color]=\"'darkblue'\" >\n                    Please Select Exercises in this plan</h3>\n               <div class=\"exercise-item\" *ngFor=\"let exercise of exercises; let i=index\" \n                [ngClass]=\"selected[i].class\" (click)=\"selectedItem(i)\"> \n                <img id=\"main\" src=\"http://localhost:5000/files/uploads/{{exercise.imagefile}}\">\n                <img id=\"tick\" src=\"http://localhost:5000/files/images/tick.png\" *ngIf=\"selected[i].class=='tick'\">\n                <div class=\"name\">{{exercise.name}}</div> \n               </div>\n    </div>\n    \n    </form>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { WorkoutFormComponent } from '../workout-form/workout-form.component';\nimport { WorkoutService } from 'src/app/services/workout.service';\nimport { workout } from 'src/app/model/workout';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-workouts-home',\n  templateUrl: './workouts-home.component.html',\n  styleUrls: ['./workouts-home.component.css']\n})\nexport class WorkoutsHomeComponent implements OnInit {\nworkouts:workout[];\n  constructor(private router:Router,private route:ActivatedRoute,private dialog:MatDialog,private ws:WorkoutService) { }\n\n  ngOnInit(): void {\n    this.ws.getWorkout().subscribe(\n      (data:workout[])=> this.workouts=data,\n      ()=>this.workouts=[]\n   )\n  }\n\n  changeroute(current){\n    this.router.navigate(['details'],{relativeTo:this.route.parent,state:current});;\n  }\n\n  \n  loadDialog(){\n    \n    const dialogRef = this.dialog.open(WorkoutFormComponent, {\n      width: '900px',\n      height: '650px'\n    });\n\n    dialogRef.afterClosed().subscribe(()=>this.ngOnInit());\n\n}\n\n}\n","<div class=\"form-button\" (click)=\"loadDialog()\"> \n    <img src=\"http://localhost:5000/files/images/workout.png\"> \n    Add A Workout plan\n </div>\n\n <div id=\"workouts\">\n     <app-workout-item *ngFor=\"let workout of workouts\" \n     [workout]=\"workout\"\n     (click)=\"changeroute(workout)\">\n    </app-workout-item>\n </div>"]}