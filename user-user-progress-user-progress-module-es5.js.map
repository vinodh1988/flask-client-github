{"version":3,"sources":["webpack:///src/app/services/progress.service.ts","webpack:///src/app/user/user-progress/daily-activity/daily-activity.component.ts","webpack:///src/app/user/user-progress/daily-activity/daily-activity.component.html","webpack:///src/app/user/user-progress/uprogress-home/uprogress-home.component.ts","webpack:///src/app/user/user-progress/uprogress-home/uprogress-home.component.html","webpack:///src/app/user/user-progress/user-graphs/line-chart/line-chart.component.ts","webpack:///src/app/user/user-progress/user-graphs/line-chart/line-chart.component.html","webpack:///src/app/user/user-progress/user-graphs/user-graphs.component.ts","webpack:///src/app/user/user-progress/user-graphs/user-graphs.component.html","webpack:///src/app/user/user-progress/user-progress.module.ts","webpack:///src/app/user/user-progress/user-tables/user-tables.component.ts","webpack:///src/app/user/user-progress/user-tables/user-tables.component.html"],"names":["ProgressService","http","log","httpOptions","headers","authstring","exerciseid","get","obj","put","providedIn","DailyActivityComponent","ps","ws","pss","exercises","status","calories","mins","secs","currentActivity","watchtoggle","getProfile","subscribe","profile","getWorkoutByName","subscription","workout","getWorkoutmap","id","data","x","push","exercise","getStatus","duration","index","name","currentIndex","alert","currentinterval","setInterval","clearInterval","currentDuration","Math","round","confirm","console","setStatus","result","weight","Number","calrange1","calrange2","calrange3","undefined","isNaN","count","length","setProgress","selector","templateUrl","styleUrls","UprogressHomeComponent","router","route","url","navigate","relativeTo","parent","changeroute","LineChartComponent","view","legend","showLabels","animations","xAxis","yAxis","showYAxisLabel","showXAxisLabel","yAxisLabel","timeline","colorScheme","domain","JSON","parse","stringify","onSelect","onActivate","onDeactivate","UserGraphsComponent","pf","getProgress","result2","progress","object1","object2","date","series1","series2","path","component","UserProgressModule","forChild","declarations","imports","UserTablesComponent"],"mappings":"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","file":"user-user-progress-user-progress-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LogService } from './login.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProgressService {\n\n  httpOptions;\n  constructor(private http:HttpClient,private log:LogService) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.log.authstring\n      })\n    }\n  }\n  \n  getStatus(exerciseid):Observable<object>{\n      return this.http.get(\"http://localhost:5000/exercisetracker/\"+exerciseid,this.httpOptions)\n  }\n\n  setStatus(exerciseid,obj):Observable<object>{\n    return this.http.put(\"http://localhost:5000/exercisetracker/\"+exerciseid,obj,this.httpOptions)\n  }\n\n  setProgress(obj):Observable<object>{\n    return this.http.put(\"http://localhost:5000/progressupdate\",obj,this.httpOptions)\n  }\n\n  getProgress():Observable<object>{\n    return this.http.get(\"http://localhost:5000/progressdata\",this.httpOptions)\n  }\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { profile } from 'src/app/model/profile';\nimport { exercise } from 'src/app/model/exercise';\nimport { workout } from 'src/app/model/workout';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { WorkoutService } from 'src/app/services/workout.service';\nimport { ProgressService } from 'src/app/services/progress.service';\n\n@Component({\n  selector: 'app-daily-activity',\n  templateUrl: './daily-activity.component.html',\n  styleUrls: ['./daily-activity.component.css']\n})\nexport class DailyActivityComponent implements OnInit {\nprofile:profile;\nexercises:exercise[]=[];\nworkout:workout;\nstatus:any[]=[];\nweight:number;\ncalories:number=0;\nmins: number=0;\nsecs: number=0;\ncurrentinterval:any;\ncurrentActivity:string= \"None\";\ncurrentIndex:number;\nwatchtoggle:boolean=true;\ncurrentDuration:number;\n\n  constructor(private ps:ProfileService,private ws:WorkoutService,private pss:ProgressService) { }\n\n  ngOnInit(): void {\n\n      this.ps.getProfile().subscribe(\n        (profile:profile)=>{\n           this.profile=profile;\n           this.ws.getWorkoutByName(this.profile.subscription).subscribe(\n             (workout:workout)=>{\n               this.workout=workout\n               this.ws.getWorkoutmap(this.workout.id).subscribe(\n                 (data:any[])=>{\n                       for(let x in data){\n                         this.exercises.push(data[x].exercise)\n                          this.pss.getStatus(data[x].exercise.id).subscribe(\n                             (data:any)=>this.status[x]={status: data.status, duration: data.duration}\n                          )\n                       }\n                   \n                 }\n               )\n              }\n           )\n        }\n      )\n  }\n\n   currentSelection(index){\n     \n     if(this.status[index].status==\"incomplete\"){\n           this.currentActivity=this.exercises[index].name;\n           this.currentIndex=index;\n           this.status[this.currentIndex].status=\"pending\";\n     }\n     else{\n         alert(\"This Activity is Up for the day\");\n     }\n   }\n  timer(){\n    if(this.currentActivity==\"None\")\n         alert(\"You have not selected any Exercise\")\n    else{\n    this.watchtoggle=false;\n    this.secs=0;this.mins=0;\n        this.currentinterval=setInterval(()=>{\n            this.secs++;\n            if(this.secs==60){\n                 this.mins++;\n                 this.secs=0;\n            }\n        },1000)\n      }\n  }\n\n  stop(){\n         clearInterval(this.currentinterval);\n         this.watchtoggle=true;\n  }\n\n  finish(){\n    this.currentDuration=Math.round(this.mins+ (this.secs/60));\n    if(this.currentDuration<1)\n         alert(\"You need to do an exercise atleast for a minute\");\n    else if(confirm(\"Are you finished this exercise?\")){\n        let index=this.currentIndex;\n        console.log(index);\n      \n        this.secs=0;this.mins=0;this.watchtoggle=true;this.currentActivity=\"None\";\n        clearInterval(this.currentinterval);\n        let obj={duration:this.currentDuration}\n        this.pss.setStatus(this.exercises[index].id,obj).subscribe(\n          (result:any)=>{\n           \n            if(this.profile.weight>=100&& this.profile.weight<=140)\n                this.calories+=Number(this.exercises[index].calrange1)*obj.duration;\n            else  if(this.profile.weight>=140&& this.profile.weight<=180)\n                this.calories+=Number(this.exercises[index].calrange2)*obj.duration;\n            else \n                this.calories+=Number(this.exercises[index].calrange3)*obj.duration;\n            this.status[index].status=result.status;\n            this.status[index].duration=result.duration;\n          },\n          ()=>{alert(\"something went wrong\")}\n        )\n        \n     }\n  }\n\n  updateProgress(){\n       alert(\"event fired\");\n       \n      if(this.weight==undefined||isNaN(this.weight)||this.weight<100||this.weight>=300){\n        alert(\"invalid weight\");\n      \n      }\n      else{\n        let status=\"incomplete\";\n        let count=0;\n        let calories=0\n        for(let x in this.exercises){\n          if(this.status[x].status==\"completed\")\n              count++;\n              if(this.profile.weight>=100&& this.profile.weight<=140)\n                 calories+=Number(this.exercises[x].calrange1)*this.status[x].duration;\n          else  if(this.profile.weight>=140&& this.profile.weight<=180)\n                calories+=Number(this.exercises[x].calrange2)*this.status[x].duration;\n          else \n                 calories+=Number(this.exercises[x].calrange3)*this.status[x].duration;\n        }\n\n        this.calories=calories;\n        console.log(count,this.exercises.length)\n        if(count==this.exercises.length)\n           status=\"complete\"\n        console.log(status)\n           let obj={weight:this.weight,calories:this.calories,status:status};\n\n           this.pss.setProgress(obj).subscribe(\n             ()=>{alert(\"Updated\")},\n             ()=>{alert(\"Some issue\")}\n           )\n      }\n        \n  }\n}\n","<div id=\"container\" *ngIf=\"status.length==exercises.length && exercises.length>0\">\n  <div id=\"left\">\n<ul >\n  <li *ngFor=\"let x of exercises;let y=index\" (click)=\"currentSelection(y)\">\n    {{x.name}}\n    <img src=\"http://localhost:5000/files/images/{{status[y].status+'.png'}}\">\n  </li>\n</ul>\n<br><br>\n  <div class=\"form-item\">\n       <label for=\"weight\">Weight(lbs)</label>\n       <input type=\"text\" [(ngModel)]=\"weight\">\n  </div>\n  <div class=\"form-item\">\n    <label for=\"weight\">Calories Burnt</label>\n    <label for=\"weight\">{{calories}}</label>\n  </div>\n  <button (click)=\"updateProgress()\">Update todays status</button>\n</div>\n\n<div id=\"right\">\n   \n    <div id=\"timer-box\">\n      <div id=\"current-activity\"> Current Activity :  {{currentActivity}}</div>\n            <div class=\"timer\">  {{mins}}  Mins {{secs}}  Secs</div>\n            <button [disabled]=\"watchtoggle\" (click)=\"stop()\">Stop</button>\n            <button [disabled]=\"!watchtoggle\" (click)=\"timer()\">Start</button>\n            <button (click)=\"finish()\">Finish</button>\n    </div>\n</div>\n</div>\n<div id=\"container\" *ngIf=\"profile!=undefined && profile.subscription==null\">\n       You Have not Subscribed to any Workout plans yet\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-uprogress-home',\n  templateUrl: './uprogress-home.component.html',\n  styleUrls: ['./uprogress-home.component.css']\n})\nexport class UprogressHomeComponent implements OnInit {\n\n  constructor(private router:Router,private route:ActivatedRoute) { }\n\n  ngOnInit(): void {\n  }\n  \n  changeroute(url){\n  this.router.navigate([url],{relativeTo:this.route.parent,});;\n  }\n}\n","\n\n<li class=\"activity\" (click)=\"changeroute('activity')\">\n    Start todays Workout\n    <img src=\"http://localhost:5000/files/images/start.png\">\n</li>\n\n<li class=\"activity\" (click)=\"changeroute('tables')\">\n    Your Progress Statiscs\n    <img src=\"http://localhost:5000/files/images/table.png\">\n</li>\n\n<li class=\"activity\" (click)=\"changeroute('graphs')\">\n    Your Progress Curves\n    <img src=\"http://localhost:5000/files/images/chart.png\">\n</li>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.css']\n})\nexport class LineChartComponent {\n\n  @Input() multi: any[];\n  view: any[] = [450, 300];\n\n\n  // options\n  legend: boolean = false;\n  showLabels: boolean = true;\n  animations: boolean = true;\n  xAxis: boolean = true;\n  yAxis: boolean = true;\n  showYAxisLabel: boolean = true;\n  showXAxisLabel: boolean = true;\n  @Input('xaxis') xAxisLabel: string;\n  @Input('yaxis') yAxisLabel: string = 'Population';\n  timeline: boolean = true;\n\n  colorScheme = {\n    domain: ['#5AA454', '#E44D25', '#CFC0BB', '#7aa3e5', '#a8385d', '#aae3f5']\n  };\n\n  constructor() {\n      \n   \n  }\n\n  onSelect(data): void {\n    console.log('Item clicked', JSON.parse(JSON.stringify(data)));\n  }\n\n  onActivate(data): void {\n    console.log('Activate', JSON.parse(JSON.stringify(data)));\n  }\n\n  onDeactivate(data): void {\n    console.log('Deactivate', JSON.parse(JSON.stringify(data)));\n  }\n}\n\n","<ngx-charts-line-chart\n  [view]=\"view\"\n  [scheme]=\"colorScheme\"\n  [legend]=\"legend\"\n  [showXAxisLabel]=\"showXAxisLabel\"\n  [showYAxisLabel]=\"showYAxisLabel\"\n  [xAxis]=\"xAxis\"\n  [yAxis]=\"yAxis\"\n  [xAxisLabel]=\"xAxisLabel\"\n  [yAxisLabel]=\"yAxisLabel\"\n  [timeline]=\"timeline\"\n  [results]=\"multi\"\n  (select)=\"onSelect($event)\"\n  (activate)=\"onActivate($event)\"\n  (deactivate)=\"onDeactivate($event)\"\n  >\n</ngx-charts-line-chart>\n","import { Component, OnInit } from '@angular/core';\nimport { ProgressService } from 'src/app/services/progress.service';\n\n@Component({\n  selector: 'app-user-graphs',\n  templateUrl: './user-graphs.component.html',\n  styleUrls: ['./user-graphs.component.css']\n})\nexport class UserGraphsComponent implements OnInit {\nprogress:any[];\nseries1:any[];\nseries2:any[];\n  constructor(private pf:ProgressService) { }\n\n  ngOnInit(): void {\n       this.pf.getProgress().subscribe(\n         (data:any[])=>{\n           let result=[]\n           let result2=[]\n           this.progress=data\n           let object1={ \"name\": \"Days\", \"series\":[]}\n           let object2={ \"name\": \"Days\", \"series\":[]}\n           for(let x in this.progress){\n               object1[\"series\"].push({\"name\":this.progress[x].date,\"value\":Number(this.progress[x].weight)})\n               object2[\"series\"].push({\"name\":this.progress[x].date,\"value\":Number(this.progress[x].calories)})\n           }\n               result.push(object1)\n               result2.push(object2);\n               this.series1=result;\n               this.series2=result2;\n         },\n         ()=> this.progress=[]\n       )\n  }\n\n}\n","\n<div class=\"container\">\n  <div class=\"left\">\n      <h1>Your Weight Transformation Curve</h1>\n      <app-line-chart [multi]=\"series1\"  xaxis=\"Days\" yaxis=\"Weight\"></app-line-chart>\n  </div>\n  <div class=\"left\">\n    <h1>Curve-Calories Burnt per Day </h1>\n    <app-line-chart [multi]=\"series2\"  xaxis=\"Days\" yaxis=\"Calories\"></app-line-chart>\n</div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UprogressHomeComponent } from './uprogress-home/uprogress-home.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DailyActivityComponent } from './daily-activity/daily-activity.component';\nimport { FormsModule } from '@angular/forms';\nimport { UserTablesComponent } from './user-tables/user-tables.component';\nimport { UserGraphsComponent } from './user-graphs/user-graphs.component';\nimport { LineChartComponent } from './user-graphs/line-chart/line-chart.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nconst route:Routes=[\n  {path:\"\",component: UprogressHomeComponent},\n  {path:\"activity\",component: DailyActivityComponent},\n  {path:\"tables\",component: UserTablesComponent},\n  {path:\"graphs\",component: UserGraphsComponent},\n]\n\n\n@NgModule({\n  declarations: [UprogressHomeComponent, DailyActivityComponent, UserTablesComponent, UserGraphsComponent, LineChartComponent],\n  imports: [\n    CommonModule,RouterModule.forChild(route),FormsModule,NgxChartsModule\n  ]\n})\nexport class UserProgressModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProgressService } from 'src/app/services/progress.service';\n\n@Component({\n  selector: 'app-user-tables',\n  templateUrl: './user-tables.component.html',\n  styleUrls: ['./user-tables.component.css']\n})\nexport class UserTablesComponent implements OnInit {\nprogress:any[]=[];\n  constructor(private pf:ProgressService) { }\n\n  ngOnInit(): void {\n       this.pf.getProgress().subscribe(\n         (data:any[])=>this.progress=data,\n         ()=> this.progress=[]\n       )\n  }\n\n}\n","<div class=\"table-content\">\n    <div class=\"left-table\">\n        <h1>Weight Changes</h1>\n             <table>\n             <thead>\n                 <tr>\n                     <th>Date</th>\n                     <th>Weight(lbs)</th>\n \n                 </tr>\n             </thead>\n             <tbody>\n                   <tr *ngFor=\"let x of progress\">\n                         <td>{{x.date}}</td>\n                         <td>{{x.weight}}</td>\n                   </tr>\n             </tbody>\n             </table>\n    </div>\n    <div class=\"right-table\">\n     <h1>Calories Lost Statistics</h1>\n     <table>\n     <thead>\n         <tr>\n             <th>Date</th>\n             <th>Calories(lbs)</th>\n              <th>Workout Status</th>\n         </tr>\n     </thead>\n     <tbody>\n           <tr *ngFor=\"let x of progress\">\n                 <td>{{x.date}}</td>\n                 <td>{{x.calories}}</td>\n                 <td>{{x.status}}</td>\n           </tr>\n     </tbody>\n     </table>\n    </div>\n \n </div>"]}