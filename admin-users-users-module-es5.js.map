{"version":3,"sources":["webpack:///src/app/admin/users/admusers-home/adminspage/adminspage.component.ts","webpack:///src/app/admin/users/admusers-home/adminspage/adminspage.component.html","webpack:///src/app/admin/users/admusers-home/admusers-home.component.ts","webpack:///src/app/admin/users/admusers-home/admusers-home.component.html","webpack:///src/app/admin/users/admusers-home/userspage/userspage.component.ts","webpack:///src/app/admin/users/admusers-home/userspage/userspage.component.html","webpack:///src/app/admin/users/admusers-home/usertable/usertable.component.ts","webpack:///src/app/admin/users/admusers-home/usertable/usertable.component.html","webpack:///src/app/admin/users/users.module.ts","webpack:///src/app/services/user.service.ts"],"names":["AdminspageComponent","us","log","username","getUsers","subscribe","result","users","obj","password","email","role","register","alert","ngOnInit","storeUser","selector","templateUrl","styleUrls","AdmusersHomeComponent","router","route","getUserCount","data","usercount","count","getAdminCount","admincount","current","navigate","relativeTo","parent","changeroute","UserspageComponent","UsertableComponent","displayedColumns","datasource","paginator","path","component","UsersModule","forChild","declarations","imports","UserService","http","httpOptions","headers","authstring","get","usertype","providedIn"],"mappings":"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","file":"admin-users-users-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { user } from 'src/app/model/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { LogService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-adminspage',\n  templateUrl: './adminspage.component.html',\n  styleUrls: ['./adminspage.component.css']\n})\nexport class AdminspageComponent implements OnInit {\n  username:string=\"\";\n  users:user[];\n  constructor(private us:UserService,private log:LogService) { }\n\n  ngOnInit(): void {\n    this.us.getUsers('admin').subscribe(\n        (result:user[])=>this.users=result,\n        ()=> this.users=[]\n    )\n  }\n\n  storeUser(){\n\n    let obj={\n      username:this.username,\n      password: 'fitnessadmin',\n      email:this.username+\"@fitnesstracker.com\",\n      role:'admin'}\n      this.username=\"\"\n      this.log.register(obj).subscribe(\n         ()=>{this.username=\"\";alert(\"user added\");this.ngOnInit();},\n         ()=>{this.username=\"\";alert(\"try again\")}\n      )\n  }\n\n}\n","<h2>Administrator users</h2>\n<div class=\"form\">\n    <input type=\"text\" [(ngModel)]=\"username\">\n    <button mat-raised-button [disabled]=\"username.length<4\" (click)=\"storeUser()\" >\n        <mat-icon color=\"white\" \n        aria-hidden=\"false\" aria-label=\"Example home icon\">add</mat-icon>\n        Add User\n    </button>\n</div>\n<app-usertable [users]=\"users\"></app-usertable>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-admusers-home',\n  templateUrl: './admusers-home.component.html',\n  styleUrls: ['./admusers-home.component.css']\n})\nexport class AdmusersHomeComponent implements OnInit {\n\nusercount:number;\nadmincount:number;\n\n  constructor(private  router:Router,private route:ActivatedRoute,private us:UserService) { }\n\n  ngOnInit(): void {\n       this.us.getUserCount().subscribe(\n         (data:any)=>this.usercount=data.count ,\n          ()=>this.usercount= 0\n       )\n\n\n       this.us.getAdminCount().subscribe(\n        (data:any)=>this.admincount=data.count ,\n         ()=>this.usercount= 0\n      )\n  }\n\n  changeroute(current){\n    this.router.navigate([current],{relativeTo:this.route.parent});\n  }\n}\n","<app-dashboard-item title=\"Users\"\n [count]=\"usercount\" \n imgurl=\"http://localhost:5000/files/images/users.png\"\n (click)=\"changeroute('users')\">\n</app-dashboard-item>\n\n\n<app-dashboard-item title=\"Administrators\"\n [count]=\"admincount\" \n imgurl=\"http://localhost:5000/files/images/admins.png\"\n (click)=\"changeroute('admins')\">\n</app-dashboard-item>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { user } from 'src/app/model/user';\n\n@Component({\n  selector: 'app-userspage',\n  templateUrl: './userspage.component.html',\n  styleUrls: ['./userspage.component.css']\n})\nexport class UserspageComponent implements OnInit {\n users:user[];\n  constructor(private us:UserService) { }\n\n  ngOnInit(): void {\n    this.us.getUsers('user').subscribe(\n        (result:user[])=>this.users=result,\n        ()=> this.users=[]\n    )\n  }\n\n}\n","\n<h2> Registered Users </h2>\n<app-usertable [users]=\"users\"></app-usertable>\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { user } from 'src/app/model/user';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-usertable',\n  templateUrl: './usertable.component.html',\n  styleUrls: ['./usertable.component.css']\n})\nexport class UsertableComponent implements OnInit {\n  displayedColumns: string[] = ['User Name', 'Email', 'Created'];\n  datasource;\n  @Input() users:user[];\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(){\n    \n    this.datasource=new MatTableDataSource<user>(this.users);\n    this.datasource.paginator=this.paginator;\n  }\n}\n","<div class=\"mat-elevation-z8\"  class=\"user-tab\">\n    <table mat-table [dataSource]=\"datasource\">\n  \n      \n      <ng-container matColumnDef=\"User Name\">\n        <th mat-header-cell *matHeaderCellDef> Username </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\n      </ng-container>\n  \n      \n      <ng-container matColumnDef=\"Email\">\n        <th mat-header-cell *matHeaderCellDef> Email </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n      </ng-container>\n  \n      \n\n      <ng-container matColumnDef=\"Created\">\n        <th mat-header-cell *matHeaderCellDef> Created</th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.created}} </td>\n      </ng-container>\n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  \n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>\n  \n ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AdmusersHomeComponent } from './admusers-home/admusers-home.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { UserspageComponent } from './admusers-home/userspage/userspage.component';\nimport { AdminspageComponent } from './admusers-home/adminspage/adminspage.component';\nimport { UsertableComponent } from './admusers-home/usertable/usertable.component';\nimport { AngmaterialModule } from 'src/app/angmaterial/angmaterial.module';\nimport { FormsModule } from '@angular/forms';\n\n\nconst route:Routes=[\n  {path:\"\",component: AdmusersHomeComponent},\n  {path:\"users\",component:UserspageComponent},\n  {path:\"admins\",component:AdminspageComponent}\n\n]\n\n\n@NgModule({\n  declarations: [AdmusersHomeComponent, UserspageComponent,AdminspageComponent, UsertableComponent],\n  imports: [\n    CommonModule,RouterModule.forChild(route),SharedModule,AngmaterialModule,FormsModule\n  ]\n})\nexport class UsersModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { LogService } from './login.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  httpOptions;\n  constructor(private http:HttpClient,private log:LogService) { \n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': this.log.authstring\n      })\n    }\n  }\n\n  getUserCount():Observable<object>{\n    return this.http.get(\"http://localhost:5000/userstats/count\",this.httpOptions);\n  }\n\n  getAdminCount():Observable<object>{\n    return this.http.get(\"http://localhost:5000/userstats/acount\",this.httpOptions);\n  }\n\n  getUsers(usertype):Observable<object>{\n    return this.http.get(\"http://localhost:5000/userdata/\"+usertype,this.httpOptions);\n  }\n}\n"]}