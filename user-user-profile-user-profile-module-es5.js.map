{"version":3,"sources":["webpack:///src/app/user/user-profile/update-profile/update-profile.component.ts","webpack:///src/app/user/user-profile/update-profile/update-profile.component.html","webpack:///src/app/user/user-profile/upro-home/upro-home.component.ts","webpack:///src/app/user/user-profile/upro-home/upro-home.component.html","webpack:///src/app/user/user-profile/user-profile.module.ts"],"names":["UpdateProfileComponent","dialogRef","data","ps","log","password","cpassword","address","error","item","obj","itemtype","length","undefined","weight","isNaN","age","feet","inch","console","updateItem","subscribe","logout","window","location","reload","alert","close","updateRecord","selector","templateUrl","styleUrls","UproHomeComponent","dialog","getProfile","profile","type","open","width","height","afterClosed","ngOnInit","loadDialog","route","path","component","UserProfileModule","forChild","declarations","imports"],"mappings":"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","file":"user-user-profile-user-profile-module-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { NumberValueAccessor } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { getMatScrollStrategyAlreadyAttachedError } from '@angular/cdk/overlay/scroll/scroll-strategy';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { LogService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-update-profile',\n  templateUrl: './update-profile.component.html',\n  styleUrls: ['./update-profile.component.css']\n})\nexport class UpdateProfileComponent implements OnInit {\npassword:string=\"\";\ncpassword:string=\"\";\naddress:string=\"\";\nage:number;\nweight:number;\ninch:number;\nfeet:number;\nerror:string=\"\";\n\n  constructor(  public dialogRef: MatDialogRef<UpdateProfileComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,private ps:ProfileService,private log:LogService) { }\n\n  ngOnInit(): void {\n  }\n \n  updateRecord(){\n      let item;\n      let obj;\n      this.error=\"\"\n       \n       if(this.data.itemtype==\"address\"){ \n         \n          if(this.address.length<10)\n             this.error=\"Address should be atleast 10 charectar long\"\n          else{\n             item=\"address\";\n             obj={\"address\":this.address}\n          }\n       }\n       else if(this.data.itemtype==\"password\"){\n        if( this.password==undefined || this.cpassword==undefined || (this.password!=this.cpassword) || this.password.length<=6)\n           this.error=\"Passwords should match and atleast 6 char long\"\n           else{\n           item=\"password\";\n           obj={\"password\":this.password}\n           }\n       }\n\n       if(this.data.itemtype==\"weight\"){\n        if(this.weight==undefined||isNaN(this.weight)||this.weight<100||this.weight>=300)\n           this.error=\"Invalid Weight\" \n        else{\n           item=\"weight\";\n           obj={\"weight\":this.weight}\n        }\n     }\n\n     if(this.data.itemtype==\"age\"){\n      if(this.age==undefined||isNaN(this.age)||this.age<10||this.weight>=90)\n         this.error=\"Invalid Age\"\n      else{\n         item=\"age\";\n         obj={\"age\":this.age}\n      }\n   }\n \n   if(this.data.itemtype==\"height\"){\n     \n    if((this.feet==undefined||isNaN(this.feet)||this.feet<=2||this.feet>=8) ||\n    (this.inch==undefined||isNaN(this.inch)||this.inch<=0||this.feet>=11))\n       this.error=\"Invalid Height\"\n    else{\n       item=\"height\";\n       obj={\"height\":this.feet + ' fts ' + this.inch+\" inches\"  }\n    }\n \n }\n      console.log(item,obj);\n    if(this.error==\"\")\n      this.ps.updateItem(item,obj).subscribe(\n        ()=>{\n            if(this.data.itemtype==\"password\")\n            {\n              this.log.logout();\n              window.location.reload();\n            }\n            alert(\"Updated\");\n            this.dialogRef.close()\n        },\n        ()=>{\n           alert(\"Some issue in updating\")\n        }\n      )\n  }\n\n  \n}\n","<div class=\"field-container\"  *ngIf=\"data.itemtype=='address'\">\n     <h3>Address</h3>\n     <textarea [(ngModel)]=\"address\" rows=\"5\" cols=\"50\"></textarea>\n</div>\n\n<div class=\"field-container\"  *ngIf=\"data.itemtype=='height'\">\n    <h3>Height (Feets/ Inches</h3>\n    <input type=\"number\" placeholder=\"feets\" [(ngModel)]=\"feet\">\n    <input type=\"number\" placeholder=\"inch\" [(ngModel)]=\"inch\">\n</div>\n\n<div class=\"field-container\"  *ngIf=\"data.itemtype=='weight'\">\n    <h3>Weight</h3>\n    <input type=\"number\" [(ngModel)]=\"weight\">\n</div>\n\n<div class=\"field-container\"  *ngIf=\"data.itemtype=='age'\"> \n    <h3>Age</h3>\n    <input type=\"number\" [(ngModel)]=\"age\">\n</div>\n\n<div class=\"field-container\"  *ngIf=\"data.itemtype=='password'\">\n    <h3>Password</h3>\n    <input type=\"password\" [(ngModel)]=\"password\">\n    <h3>Confirm Password</h3>\n    <input type=\"password\" [(ngModel)]=\"cpassword\">\n</div> \n<div class=\"error\">{{error}}</div>\n<div class=\"submit-item\">\n    <button (click)=\"updateRecord()\">Update</button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { profile } from 'src/app/model/profile';\nimport { ProfileService } from 'src/app/services/profile.service';\nimport { UpdateProfileComponent } from '../update-profile/update-profile.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-upro-home',\n  templateUrl: './upro-home.component.html',\n  styleUrls: ['./upro-home.component.css']\n})\nexport class UproHomeComponent implements OnInit {\nprofile:profile;\n  constructor(public dialog: MatDialog,private ps:ProfileService) { }\n\n  ngOnInit(): void {\n      this.ps.getProfile().subscribe(\n        (data:profile)=>this.profile=data,\n          ()=>{}\n      )\n  }\n\n  loadDialog(type){\n    \n    const dialogRef = this.dialog.open(UpdateProfileComponent, {\n      width: '600px',\n      height: '320px',\n      data: {itemtype:type}\n    });\n\n    dialogRef.afterClosed().subscribe(()=>this.ngOnInit());\n\n}\n\n}\n","<div class=\"profile-item\">\n       <div class=\"btn-item\" (click)=\"loadDialog('password')\">Update Password </div>\n</div>\n\n<div class=\"profile-item\">\n       Address <div class=\"address-item\">{{profile.address}}</div>\n       <div class=\"btn-item\" (click)=\"loadDialog('address')\">Update Address </div>\n</div>\n\n\n<div class=\"profile-item\">\n    Height <div class=\"address-item\">{{profile.height}}</div>\n    <div class=\"btn-item\" (click)=\"loadDialog('height')\">Update Height </div>\n</div>\n\n<div class=\"profile-item\">\n    Weight(lbs) <div class=\"address-item\">{{profile.weight}}</div>\n    <div class=\"btn-item\" (click)=\"loadDialog('weight')\">Update Weight </div>\n</div>\n\n<div class=\"profile-item\">\n     Age <div class=\"address-item\">{{profile.age}}</div>\n    <div class=\"btn-item\" (click)=\"loadDialog('age')\">Update Age </div>\n</div>\n\n\n<div class=\"profile-item\">\n    Your Workout plan <div class=\"address-item\">{{profile.subscription}}</div>\n   \n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UproHomeComponent } from './upro-home/upro-home.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AngmaterialModule } from 'src/app/angmaterial/angmaterial.module';\nimport { FormsModule } from '@angular/forms';\nimport { UpdateProfileComponent } from './update-profile/update-profile.component';\n\nconst route:Routes=[\n  {path:\"\",component: UproHomeComponent},\n\n]\n\n\n@NgModule({\n  declarations: [UproHomeComponent, UpdateProfileComponent],\n  imports: [\n    CommonModule,RouterModule.forChild(route),AngmaterialModule,FormsModule\n  ]\n})\nexport class UserProfileModule { }\n"]}